[workspace]
authors = ["Jing-Yilin <yilin.jing.ai@outlook.com>"]
channels = ["conda-forge", "pytorch"]
name = "mnist"
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]
version = "0.1.0"

[environments]
default = { solve-group = "default" }
cuda = { solve-group = "cuda", features = ["cuda"] }

[feature.cuda]
dependencies = { cuda = ">=12.0", cudnn = ">=9.8.0" }
platforms = ["win-64", "linux-64"]
system-requirements = { cuda = "12" }
channels = [
    "nvidia",
    { channel = "pytorch", priority = -1 },
] # Results in:  ["nvidia", "conda-forge", "pytorch"] when the default is `conda-forge`


[dependencies]
python = { version = ">=3.10,<3.13", channel = "conda-forge" }
pytorch = { version = ">=2.0.0", channel = "pytorch" }
libjpeg-turbo = { version = ">=3.0.0", channel = "conda-forge" }
libpng = { version = ">=1.6.0", channel = "conda-forge" }
torchvision = { version = ">=0.16.0", channel = "pytorch" }
mlflow = { version = ">=2.8.0", channel = "conda-forge" }
protobuf = { version = ">=3.19.0,<4.0.0", channel = "conda-forge" }
pillow = { version = ">=10.0.0", channel = "conda-forge" }
numpy = { version = ">=1.24.0", channel = "conda-forge" }

[tasks]
prepare-data = "python scripts/download_data.py"
clean-data = { cmd = "rm -rf data" }
clean-results = { cmd = "rm -rf results" }
clean-models = { cmd = "rm -rf models" }
clean-all = { depends-on = ["clean-data", "clean-results", "clean-models"] }
# Run with: pixi run train
# Or with CUDA: pixi run --environment cuda train
train = { cmd = "python main.py --save-model" }

[tasks.update-data-hash]
cmd = "python scripts/file_hash.py -m update -r -p \"*.gz\" data"
depends-on = ["prepare-data"]

[tasks.verify-data-hash]
cmd = "python scripts/file_hash.py -m verify -r -p \"*.gz\" data"
depends-on = ["prepare-data"]

[tasks.update-model-hash]
cmd = "python scripts/file_hash.py -m update -r models/$PIXI_ENVIRONMENT_NAME"
depends-on = ["train"]

[tasks.verify-model-hash]
cmd = "python scripts/file_hash.py -m verify -r models/$PIXI_ENVIRONMENT_NAME"
depends-on = ["train"]

[tasks.update-result-hash]
cmd = "python scripts/file_hash.py -m update -r results/$PIXI_ENVIRONMENT_NAME"
depends-on = ["train"]

[tasks.verify-result-hash]
cmd = "python scripts/file_hash.py -m verify -r results/$PIXI_ENVIRONMENT_NAME"
depends-on = ["train"]

[tasks.experiment]
depends-on = [
    # "clean-all",
    "prepare-data",
    "update-data-hash",
    "train",
    "update-model-hash",
    "update-result-hash",
]

[tasks.reproduction]
depends-on = [
    # "clean-all",
    "prepare-data",
    "verify-data-hash",
    "train",
    "verify-model-hash",
    "verify-result-hash",
]

[tasks.verify-windows]
cmd = "python scripts/platform_verification.py log --message 'Windows verification completed successfully'"
depends-on = ["reproduction"]

[tasks.verify-linux]
cmd = "python scripts/platform_verification.py log --message 'Linux verification completed successfully'"
depends-on = ["reproduction"]

[tasks.verify-macos]
cmd = "python scripts/platform_verification.py log --message 'macOS verification completed successfully'"
depends-on = ["reproduction"]

[tasks.verify-linux-cuda]
cmd = "python scripts/platform_verification.py log --message 'Linux CUDA verification completed successfully'"
depends-on = ["reproduction"]

[tasks.multiplatform-verify]
depends-on = [
    "verify-windows",
    "verify-linux",
    "verify-macos",
    "verify-linux-cuda",
]

[tasks.create-verification-report]
cmd = "python scripts/platform_verification.py report --output verification_report.md"
depends-on = ["multiplatform-verify"]
